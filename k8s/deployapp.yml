apiVersion: v1
kind: PersistentVolumeClaim
metadata: 
  name: az-sql-disk
spec: 
  accessModes: 
  - ReadWriteOnce 
  storageClassName: managed-premium
  resources: 
    requests: 
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: sqlserver
  name: sqlserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sqlserver
    spec:
      containers:
      - image: burk1212/booksql
        name: sqlserver
        volumeMounts: 
        - mountPath: /var/opt/mssql 
          name: mssqldb
        ports: 
        - containerPort: 1433
        env: 
        - name: MSSQL_PID
          value: Express
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD 
          value: Marine7815@@
        resources: {}
      volumes: 
      - name: mssqldb
        persistentVolumeClaim: 
          claimName: az-sql-disk
status: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: sqlserver
  name: sqlserver
spec:
  ports:
  - port: 1433
    protocol: TCP
    targetPort: 1433
  selector:
    app: sqlserver
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: frontend
    spec:
      containers:
      - image: burk1212/bookweb
        name: nodejs
        ports: 
        - containerPort: 80
        imagePullPolicy: Always


---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: frontend
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}
